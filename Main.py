print(5, 8, 4)
             
n = None  # None - пустое значение; можно указать пустое значение если не знаем какое оно будет;
# в python не нужно писать тип данных в начале как это делали в C#;
# n = 5 int; n = "efsedsfse" str;
 
print(n)

"""
так комитят несколько строк
"""

# ctrl+k ctrl+c закоминить несколько строк
# ctrl+k ctrl+u убрать комиты

n ='s\'s' # \ слеш дает добавлять кавычки внутрь строки

print(type(n)) # type выводит в терминал тип данных 

a = 5
b = 5.45
c = 'Hello'
print (f"{a} - {b} - {c}") # интерполяция строк
print ("{} - {} - {}" .format(a,b,c)) # интерполяция строк

                            # ВВОД ДАННЫХ c терминала
print('Введите первую строку ')
a = int(input()) 
b = int(input('Введите вторую строку: '))
print(a,'+',b, '=',a + b)

# ПРИВЕДЕНИЕ ТИПОВ ДАННЫХ

c = 5.34
print(c)
print(type(c))
c = int(c)       # из float в int
print(c)
print(type(c))

c = 5.34
print(c)
print(type(c))
c = str(c)       # из float в str
print(c)
print(type(c))

a = 8.12332
b = 3.22121
print(round(a+b, 2)) #функция round определяем сколько цифр останется после запятой в данном случае указали 2;

#Сокращенные операции присваивания

# в C# внутри цикла for мы писали i++. Это было сокращение от i = i + 1.

iter = 2
iter += 3 # iter = iter + 3
iter -= 4 # iter = iter - 4
iter *= 5 # iter = iter * 5
iter /= 5 # iter = iter / 5
iter //= 5 # iter = iter // 5
iter %= 5 # iter = iter % 5
iter **= 5 # iter = iter ** 5

# Пример программы на python
username = input('Введите имя: ')
if username == 'Маша':
    print('Ура, это же МАША!')
elif username == 'Марина':
    print('Я так ждала Вас, Марина!')
elif username == 'Ильнар':
    print('Ильнар - топ)')
else:
    print('Привет, ', username)


#     Range
# ● Range выдает значения из диапазона с шагом 1.
# ● Если указано только одно число — от 0 до заданного числа.
# ● Если нужен другой шаг, третьим аргументов можно задать приращение.
r = range(5) # 0 1 2 3 4
r = range(2, 5) # 2 3 4
r = range(-5, 0) # ----
r = range(1, 10, 2) # 1 3 5 7 9
r = range(100, 0, -20) # 100 80 60 40 20
r = range(100, 0, -20) # range(100, 0, -20)
for i in r:
    print(i)
# 100 80 60 40 20

# Команды для работы со строками:
    text = 'СъЕШЬ ещё этих МяГкИх французских булок'
# 1. Определить количество символов в строке:
    print(len(text)) # 39
# 2. Проверить наличие символа в строке (in):
    print('ещё' in text) # True
# 3. Функция, которая делает все буквы строки маленькими:
    print(text.lower()) # съешь ещё этих мягких французских булок
# 4. Функция, которая делает все буквы строки большими:
    print(text.upper()) # СЪЕШЬ ЕЩЁ ЭТИХ МЯГКИХ ФРАНЦУЗСКИХ БУЛОК
# 5. Заменить слово на другое :
    print(text.replace('ещё','ЕЩЁ')) # СъЕШЬ ЕЩЁ этих МяГкИх французских булок

#     Срезы
# ● Мы представляем строку в виде массива символов. Значит мы можем
# обращаться к элементам по индексам.
# ● Отрицательное число в индексе — счёт с конца строки
text = 'съешь ещё этих мягких французских булок'
print(text[0]) # c
print(text[1]) # ъ
print(text[len(text)-1]) # к
print(text[-5]) # б
print(text[:]) # съешь ещё этих мягких французских булок
print(text[:2]) # съ
print(text[len(text)-2:]) # ок
print(text[2:9]) # ешь ещё
print(text[6:-18]) # ещё этих мягких
print(text[0:len(text):6]) # сеикакл
print(text[::6]) # сеикакл
text = text[2:9] + text[-5] + text[:2] # ...
